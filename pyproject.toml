[project]
name = "e2enf"
version = "0.2.0"
description = "End-to-End Neural Formant Synthesis"
authors = [
    { name = "Sumiharu Kobayashi", email = "t232525m@st.yamagata-u.ac.jp" },
]
readme = "README.md"
requires-python = "~=3.11"
dependencies = [
    "h5py~=3.11.0",
    "hatchling~=1.27.0",
    "hydra-core~=1.3.2",
    "librosa~=0.10.1",
    "matplotlib~=3.8.4",
    "numpy~=1.26.0",
    "praat-parselmouth~=0.4.3",
    "pyreaper~=0.0.10",
    "pysptk~=0.2.2",
    "pyworld",
    "setuptools>=75.6.0",
    "tensorboard~=2.16.2",
    "torch==2.1.2+cu121; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "torch==2.1.2; sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')",
    "torchaudio==2.1.2+cu121; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "torchaudio==2.1.2; sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')",
    "torchvision==0.16.2+cu121; sys_platform == 'linux' and platform_machine == 'x86_64'",
    "torchvision==0.16.2; sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')",
    "tqdm~=4.66.4",
]

[dependency-groups]
dev = [
    "notebook~=7.0.6",
    "nbclassic~=1.0.0",
    "jupyter-console~=6.6.3",
    "debugpy~=1.8.0",
]

[project.scripts]
e2enf-anasyn = "e2enf.bin.anasyn:main"
e2enf-compute_statistics = "e2enf.bin.compute_statistics:main"
e2enf-data_augment = "e2enf.bin.data_augment:main"
e2enf-decode = "e2enf.bin.decode:main"
e2enf-extract_features = "e2enf.bin.extract_features:main"
e2enf-train = "e2enf.bin.train:main"
nf-train = "e2enf.bin.neuralformants.train:main"
nf-decode = "e2enf.bin.neuralformants.decode:main"

[tool.setuptools.packages.find]
where = ["src/"]
include = ["e2enf"]

[tool.uv]
index-strategy = "unsafe-best-match"

[tool.uv.sources]
torch = [
    { index = "pytorch-cu121", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
    { index = "pytorch-cpu", marker = "sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')" },
]
torchaudio = [
    { index = "pytorch-cu121", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
    { index = "pytorch-cpu", marker = "sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')" },
]
torchvision = [
    { index = "pytorch-cu121", marker = "sys_platform == 'linux' and platform_machine == 'x86_64'" },
    { index = "pytorch-cpu", marker = "sys_platform == 'darwin' or (sys_platform == 'linux' and platform_machine == 'aarch64')" },
]
pyworld = { git = "https://github.com/JeremyCCHsu/Python-Wrapper-for-World-Vocoder.git" }
audiometrics = { workspace = true }


[[tool.uv.index]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
explicit = true

[[tool.uv.index]]
name = "pytorch-cu121"
url = "https://download.pytorch.org/whl/cu121"
explicit = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.typos.default.extend-words]
fo = "fo"
